"use strict";(self.webpackChunkrck_docs=self.webpackChunkrck_docs||[]).push([[336],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return p}});var s=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,s,n=function(e,t){if(null==e)return{};var r,s,n={},a=Object.keys(e);for(s=0;s<a.length;s++)r=a[s],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)r=a[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=s.createContext({}),u=function(e){var t=s.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=u(e.components);return s.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},g=s.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),g=u(r),p=n,d=g["".concat(i,".").concat(p)]||g[p]||m[p]||a;return r?s.createElement(d,o(o({ref:t},l),{},{components:r})):s.createElement(d,o({ref:t},l))}));function p(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=g;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var u=2;u<a;u++)o[u]=r[u];return s.createElement.apply(null,o)}return s.createElement.apply(null,r)}g.displayName="MDXCreateElement"},8031:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return i},toc:function(){return u},default:function(){return m}});var s=r(7462),n=r(3366),a=(r(7294),r(3905)),o={title:"Creating messages"},c=void 0,i={unversionedId:"message-functions",id:"message-functions",isDocsHomePage:!1,title:"Creating messages",description:"The package comes with builtin functions for generating messages. These functions are used to create messages that are either (a) a chatbot response, (b) a user message or (c) a custom message defined by the developer.",source:"@site/docs/message-functions.md",sourceDirName:".",slug:"/message-functions",permalink:"/react-chatbot-kit-docs/docs/message-functions",tags:[],version:"current",frontMatter:{title:"Creating messages"},sidebar:"docs",previous:{title:"Create your first widget",permalink:"/react-chatbot-kit-docs/docs/create-a-widget"},next:{title:"Configuration",permalink:"/react-chatbot-kit-docs/docs/advanced/configuration"}},u=[{value:"Chatbot messages",id:"chatbot-messages",children:[]},{value:"User messages",id:"user-messages",children:[]},{value:"Custom messages",id:"custom-messages",children:[]}],l={toc:u};function m(e){var t=e.components,r=(0,n.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,s.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"message-options"},"Message options"),(0,a.kt)("p",null,"The package comes with builtin functions for generating messages. These functions are used to create messages that are either (a) a chatbot response, (b) a user message or (c) a custom message defined by the developer."),(0,a.kt)("h2",{id:"chatbot-messages"},"Chatbot messages"),(0,a.kt)("p",null,"Chatbot messages are messages that will be displayed as a response from the chatbot and is typically used as a reaction to user input:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { createChatBotMessage } from 'react-chatbot-kit';\n\nconst message = createChatBotMessage('Hello world!');\n\nconst messageWithProperties = createChatBotMessage('Hello world!', {\n  widget: 'my-widget',\n  payload: {}, // any value I want to send to the given widget or message\n  delay: 1000,\n});\n")),(0,a.kt)("h2",{id:"user-messages"},"User messages"),(0,a.kt)("p",null,"User messages are used to force a user response."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { createClientMessage } from 'react-chatbot-kit';\n\nconst message = createClientMessage('Hello world!');\n")),(0,a.kt)("h2",{id:"custom-messages"},"Custom messages"),(0,a.kt)("p",null,"Custom messages are used to render messages defined by the developer."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { createCustomMessage } from 'react-chatbot-kit';\n// 1st. argument is the text value, 2nd. argument is the name of the registered custom message.\nconst message = createCustomMessage('value to input', 'custom');\n")))}m.isMDXComponent=!0}}]);